name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          else
            echo "No TypeScript config found, skipping type check..."
          fi

      - name: Lint (if available)
        run: |
          if [ -f "package.json" ] && grep -q '"lint"' package.json; then
            pnpm lint
          else
            echo "No lint script found, skipping..."
          fi

      - name: Run tests (if available)
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            pnpm test
          else
            echo "No tests found, skipping..."
          fi

      - name: Build package
        run: pnpm build

      - name: Check build artifacts
        run: |
          if [ -d "dist" ]; then
            echo "Build artifacts found in dist/"
            ls -la dist/
          else
            echo "No dist directory found"
            exit 1
          fi

  build-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Check package can be packed
        run: |
          pnpm pack --dry-run
          echo "Package can be successfully packed"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7